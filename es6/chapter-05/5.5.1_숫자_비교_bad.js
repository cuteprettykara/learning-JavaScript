// 특별한 숫자형 값 NaN은 [그 자신을 포함하여] 무엇과도 같지 않습니다.
// 즉, NaN === NaN 과 NaN == NaN 은 모두 false입니다.
// 숫자가 NaN인지 알아보려면 isNaN() 함수를 사용하십시오.

// 자바스크립의 숫자는 모두 더블 형식입니다.
// 그리고 더블 형식은 모두 근사치이므로, 자바스크립트에서 숫자를 비교하다 보면 경악스러운 결과를 볼 때가 있습니다.

// 자바스크립트에서 [정수]를 비교할 때,
// 그 정수가 안전한 범위라면(Number.MIN_SAFE_INTEGER 이상, Number.MAX_SAFE_INTEGER이하)
// 안심하고 일치 연산자를 사용할 수 있습니다.

// 하지만 [소수점이 있는] 숫자를 비교할 때는, 관계 연산자를 써서
// 테스트하는 숫자가 대상 숫자에 "충분히 가까운지" 확인하는 편이 좋습니다.
// 충분히 가깝다는 게 무슨 말이냐고요? 때에 따라 다릅니다. 
// 자바스크립트에는 특별한 숫자형 상수 Number.EPSILON 이 있습니다.
// 이것은 매우 작은 값(약 2.22e-16)이며, 숫자 두 개를 구별하는 기준으로 사용합니다.

let n = 0;
while (true) {
    n += 0.1;
    console.log(n);
    if (n === 0.3) break;
}

console.log(`Stopped at ${n}`);

// 이 루프는 0.3에서 멈추지 않고, 그 값을 살짝 피한 다음 영원히 실행됩니다.
// 이 결과는 [0.1]이 더블 형식으로 [정확히 나타낼 수 없는 값]이기 때문입니다.
// 0.1은 이진 표현으로 나타낼 수 있는 숫자들 사이에 걸쳐 있습니다.
// 이 루프를 세 번째 반복할 때 n의 값은 0.30000000000000004 이므로 테스트는 false이고,
// 유일한 종료 조건이 실패하게 됩니다.