// 숫자와 문자열, 불리언에는 각각 대응하는 객체 타입 Number, String, Boolean이 있습니다.
// 이들 객체에는 두 가지 목적이 있습니다.
// 1. Number.INFINITY 같은 [특별한 값]을 저장
// 2. 함수 형태로 [기능]을 제공
const s = "hello";
console.log(s.toUpperCase());   // "HELLO"

// 이 예제의 s는 마치 객체처럼, 즉 함수 프로퍼티를 가진 것처럼 보입니다.
// 하지만 우리는 s가 분명 원시 문자열 타입임을 알고 있습니다. 어떻게 된 걸까요?

// 자바스크립트는 [일시적인] String 객체를 만든 겁니다.
// 이 [임시 객체]에 toUpperCase 함수가 들어있습니다.

// 자바스크립트는 함수를 호출하는 즉시, 임시 객체를 파괴합니다.
// 객체가 임시로 만들어진다는 사실은 다음과 같이 문자열에 프로퍼티를 할당해보면 알 수 있습니다.
const s2 = "hello";
s2.rating = 3;          // 에러가 없습니다. 성공일까요?
console.log(s2.rating); // undefined

// 이 예제는 마치 문자열 s2에 프로퍼티를 할당하는 것처럼 보입니다.
// 사실은 일시적인 String 객체에 프로퍼티를 할당한 겁니다.
// 임시 객체는 [즉시 파괴]되므로 s.rating은 undefined 입니다.