// 함수에 함수를 전달하는 예제는 setTimeout과 forEach에서 이미 봤습니다.

// 함수에 함수를 전달하는 다른 용도는 [비동기적 프로그래밍]입니다.
// 이런 용도로 전달하는 함수를 보통 콜백(callback)이라 부르며, 약자로 cb를 쓸 때가 많습니다.
// 콜백 함수는 [자신을 감싼 함수]가 [실행을 마쳤을 때] 호출됩니다.(14장)

// 함수에 함수를 전달하는 대표적인 사례가 콜백이긴 하지만, 그게 전부는 아닙니다.
// 함수는 [동작]이고, 함수를 받은 함수는 그 [동작을 활용]할 수 있습니다.

// 배열에 들어있는 숫자를 모두 던하는 함수 sum이 필요하다고 합시다.
// 그런데, 숫자의 제곱(square)을 합해서 반환하는 함수가 필요하다면?
// 물론 새 함수 sumOfSquares를 만들어도 됩니다.
// 그런데, 세제곱을 합해서 반환하는 함수가 필요하다면?
// 이런 상황에서 함수에 함수를 전달한다는 발상이 필요합니다.

function sum(arr, f) {
    // 함수가 전달되지 않았으면 매개변수를 그대로 반환하는 null 함수를 씁니다.
    if (typeof f != 'function') f = x => x;

    return arr.reduce((a, x) => a += f(x), 0);
}

console.log(sum([1, 2, 3]));                        // 6
console.log(sum([1, 2, 3], x => x*x));              // 14
console.log(sum([1, 2, 3], x => Math.pow(x, 3)));   // 36
