// IIFE를 이용해서 클로저를 만들 수 있다는 것을 알았습니다.
// 이제 IIFE로 비동기적 코드를 처리하는 중요한 예제를 하나 살펴봅시다.
// 이 예제는 14장에서 다시 살펴보게 될 겁니다.

// 5초에서 시작하고 카운트다운이 끝나면 'go'를 표시하는 고전적 타이머 예제를 만들어 봅시다.

var i;
for (i = 5; i >= 0; i--) {
    setTimeout(function() {
        console.log(i===0 ? "go!" : i);
    }, (5-i)*1000);
}

// 5, 4, 3, 2, 1, go!가 출력될 거라 예상했다면, 아쉽지만 틀렸습니다.
// -1이 여섯 번 출력될 뿐입니다. 어떻게 된 걸까요?

// setTimeout()에 전달된 함수가 루프 안에서 실행되지 않고, 루프가 종료된 뒤에 실행됐기 때문입니다.
// 따라서 루프의 i는 5에서 시작해 -1로 끝납니다.
// 따라서 콜백 함수가 호출되는 시점에서 i의 값은 -1입니다.