// 자바스크립트 프로그램을 시작할 때, 
// 즉 [어떤 함수도 호출하지 않았을 때] 실행 흐름은 전역 스코프에 있습니다.
// 전역 스코프에서 선언한 것은 프로그램의 [모든 스코프에서] 볼 수 있습니다.

// 전역 스코프에 선언된 것들을 [전역 변수]라고 합니다.
// 전역 변수가 나쁜 것은 아닙니다. 사실 전역 변수는 반드시 써야 합니다.
// 나쁜 것은 전역 스코프를 남용하는 것입니다.
// 피해야 하는 건 전역 스코프에 [의존]하는 겁니다.
let name = "Irena"; // 전역
let age = 25;       // 전역

function greet() {
    console.log(`Hello, ${name}`);
}
function getBirthYear() {
    return new Date().getFullYear() - age;
}

greet();
console.log(getBirthYear());

// 이 방법의 문제는 함수가 호출하는 컨텍스트(스코프)에 대단히 의존적이라는 겁니다.
// 1. 프로그램 어디에서든 상관없이 (의도적이든, 실수로든) name값을 바꿀 수 있습니다.
// 2. name과 age는 흔한 이름이므로 다른 곳에서 다른 이유로 사용할 가능성도 큽니다.