// var를 이용해 변수를 선언하면 자바스크립트는 같은 변수를 여러 번 정의하더라도 무시합니다.
// 원래 코드
var x = 3;
if (x === 3) {
    var x = 2;
    console.log(x); // 2
}
console.log(x);     // 2



// 자바스크립트가 해석한 코드
var x;
x = 3;
if (x === 3) {
    x = 2;
    console.log(x); // 2
}
console.log(x);     // 2



// 이 예제를 보면 같은 함수나 전역 스코프 안에서는 
// * var로 새 변수를 만들 수 없으며,
// * let으로 가능했던 변수 숨김(variable masking)도 불가능함을 알 수 있습니다.

// var를 쓰면 혼란스럽고 쓸모 없는 코드가 생길 수 있습니다.
// var에는 let보다 나은 점이 전혀 없습니다.
// var를 뜯어 고치면 기존 코드가 모두 망가지므로 대신 ES6에서 let을 새로 만든 겁니다.
// 언젠가는 var가 최종적으로 폐기될 날이 올 수 있습니다.

// 그럼 왜 var와 호이스팅을 이해해야 할까요?
// 1. 기존 코드 유지보수
// 2. 함수 선언 역시 끌어올려진다는 겁니다.

// 이제 함수 호이스팅에 대해 알아봅시다.
